[
  {"input":  "*class(\n  *i=test\n  *a=[\n    [one;two;three]\n  ]\n)\ntest=1:2:3",
    "minimised_modl":  "*class(\n  *i=test\n  *a=[\n    [one;two;three]\n  ]\n)\ntest=1:2:3",
    "expected_output":   "{\n    \"test\": {\n        \"one\": 1,\n        \"two\": 2,\n        \"three\": 3\n    }\n}"},
  {"input":  "*class(\n  *i=test\n  *a=[\n    [one;two;three]\n  ]\n)\n\ntest=1:2:(a=Alpha;b=Bravo;c=Charlie)",
    "minimised_modl":  "*class(\n  *i=test\n  *a=[\n    [one;two;three]\n  ]\n)\n\ntest=1:2:(a=Alpha;b=Bravo;c=Charlie)",
    "expected_output":   "{\n    \"test\": {\n        \"one\": 1,\n        \"two\": 2,\n        \"three\": {\n            \"a\": \"Alpha\",\n            \"b\": \"Bravo\",\n            \"c\": \"Charlie\"\n        }\n    }\n}"},
  {"input":  "*class(\n  *i=test\n  *a=[\n    [one;two;three]\n  ]\n)\n\ntest=1:2:[a;b;c]",
    "minimised_modl":  "*class(\n  *i=test\n  *a=[\n    [one;two;three]\n  ]\n)\n\ntest=1:2:[a;b;c]",
    "expected_output":   "{\n  \"test\": {\n    \"one\": 1,\n    \"two\": 2,\n    \"three\": [\n      \"a\",\n      \"b\",\n      \"c\"\n    ]\n  }\n}\n"},
  {"input":  "*class(\n *id=a\n *name=alpha\n *superclass=map\n v=victor\n)\n*class(\n *id=b\n *name=bravo\n *superclass=alpha\n w=whisky\n)\n*class(\n *id=c\n *name=charlie\n *superclass=bravo\n x=xray\n)\n*class(\n *id=d\n *name=delta\n *superclass=charlie\n y=yankee\n)\nd(test1=test2)",
    "minimised_modl":  "tbd",
    "expected_output":   "{\"delta\": {\"test1\": \"test2\",\"y\": \"yankee\",\"x\": \"xray\",\"w\": \"whisky\",\"v\": \"victor\"}}"},
  {"input":  "*class(\n *id=a\n *name=alpha\n *superclass=map\n v=victor\n)\n*class(\n *id=b\n *name=bravo\n *superclass=a\n w=whisky\n)\n*class(\n *id=c\n *name=charlie\n *superclass=b\n x=xray\n)\n*class(\n *id=d\n *name=delta\n *superclass=c\n y=yankee\n)\nd(test1=test2)",
    "minimised_modl":  "tbd",
    "expected_output":   "{\"delta\": {\"test1\": \"test2\",\"y\": \"yankee\",\"x\": \"xray\",\"w\": \"whisky\",\"v\": \"victor\"}}"},
  {"input": "?=`e1afmkfd`:` -7sbcecqbdsccxfizhcp6b8ah`;(name=%0.p;department=%1.p)",
    "minimised_modl": "?=`e1afmkfd`:` -7sbcecqbdsccxfizhcp6b8ah`;(name=%0.p;department=%1.p)",
    "expected_output": "{\"name\":\"пример\",\"department\":\"обслуживание клиентов\"}"
  },
  {"input": "*class(*id=object;*superclass=arr);sales(name=John Smith;telephone=44800 555 555);service(name=Jim Brown;telephone=44800 666 666)",
    "minimised_modl": "*c(*id=object;*superclass=arr);sales(name=John Smith;telephone=44800 555 555);service(name=Jim Brown;telephone=44800 666 666)",
    "expected_output": "[{\"sales\": {\"name\": \"John Smith\",\"telephone\": \"44800 555 555\"}},{\"service\": {\"name\": \"Jim Brown\",\"telephone\": \"44800 666 666\"}}]"
  },
  {"input": "*class(\n *id=p\n *NAME=person\n)\n\np(name=John Smith;dob=01/01/2001)",
    "minimised_modl": "*c(*i=p;*N=person);p(name=John Smith;dob=01/01/2001)",
    "expected_output": "{\n \"person\" : {\n   \"name\" : \"John Smith\",\n   \"dob\" : \"01/01/2001\"\n }\n}\n"
  },
  {"input": "*class(*id=a;*name=age);a=10",
    "minimised_modl": "*class(*id=a;*name=age);a=10",
    "expected_output": "{\"age\":10}"
  },
  {"input": "*class(*id=a;*name=age;*superclass=num);a=10",
    "minimised_modl": "*class(*id=a;*name=age;*superclass=num);a=10",
    "expected_output": "{\"age\":10}"
  },
  {"input": "*class(*id=a;*name=age;*superclass=str);a=10",
    "minimised_modl": "*class(*id=a;*name=age;*superclass=str);a=10",
    "expected_output": "{\"age\":\"10\"}"
  },
  {"input": "*class(*id=newstr;*superclass=str);*class(*id=a;*name=age;*superclass=newstr);a=10",
    "minimised_modl": "*class(*id=newstr;*superclass=str);*class(*id=a;*name=age;*superclass=newstr);a=10",
    "expected_output": "{\"age\":\"10\"}"
  },
 {
  "input": "*class(\n *id=g\n *name=glossary\n *superclass=map\n)\n*class(\n *id=t\n *name=title\n *superclass=str\n)\n*class(\n *id=d\n *name=GlossDiv\n *superclass=map\n)\n*class(\n *id=l\n *name=GlossList\n *superclass=map\n)\n*class(\n *id=e\n *name=GlossEntry\n *superclass=map\n *assign[\n   [i;s;gt;a;ab;gd;gs]\n ]\n)\n*class(\n *id=i\n *name=ID\n *superclass=str\n)\n*class(\n *id=s\n *name=SortAs\n *superclass=str\n)\n*class(\n *id=gt\n *name=GlossTerm\n *superclass=str\n)\n*class(\n *id=a\n *name=Acronym\n *superclass=str\n)\n*class(\n *id=ab\n *name=Abbrev\n *superclass=str\n)\n*class(\n *id=gd\n *name=GlossDef\n *superclass=map\n *assign=[\n   [p]\n   [p;sa]\n ]\n)\n*class(\n *id=p\n *name=para\n *superclass=str\n)\n*class(\n *id=sa\n *name=SeeAlso\n *superclass=arr\n)\n*class(\n *id=gs\n *name=GlossSee\n *superclass=str\n)\n\ng(\n ?=[SGML;markup;language]\n t=example glossary\n d(\n   t=S\n   l(\n     e(\n       i=%0\n       s=%0\n       gt=Standard Generalized %1.s %2.s\n       a=%0\n       ab=ISO 8879\\:1986\n       gd=A meta-%1 %2, used to create %1 %2s such as DocBook.\n         :[GML;XML]\n       gs=%1\n     )\n   )\n )\n)",
  "minimised_modl": "*c(*i=g;*n=glossary;*s=map);*c(*i=t;*n=title;*s=str);*c(*i=d;*n=GlossDiv;*s=map);*c(*i=l;*n=GlossList;*s=map);*c(*i=e;*n=GlossEntry;*s=map;*a[[i;s;gt;a;ab;gd;gs]]);*c(*i=i;*n=ID;*s=str);*c(*i=s;*n=SortAs;*s=str);*c(*i=gt;*n=GlossTerm;*s=str);*c(*i=a;*n=Acronym;*s=str);*c(*i=ab;*n=Abbrev;*s=str);*c(*i=gd;*n=GlossDef;*s=map;*a=[p]:[p;sa]);*c(*i=p;*n=para;*s=str);*c(*i=sa;*n=SeeAlso;*s=arr);*c(*i=gs;*n=GlossSee;*s=str);g(?=SGML:markup:language;t=example glossary;d(t=S;l(e(i=%0;s=%0;gt=Standard Generalized %1.s %2.s;a=%0;ab=ISO 8879~:1986;gd=A meta-%1 %2, used to create %1 %2s such as DocBook.:[GML;XML];gs=%1))))",
  "expected_output": "{\n \"glossary\" : {\n   \"title\" : \"example glossary\",\n   \"GlossDiv\" : {\n     \"title\" : \"S\",\n     \"GlossList\" : {\n       \"GlossEntry\" : {\n         \"ID\" : \"SGML\",\n         \"SortAs\" : \"SGML\",\n         \"GlossTerm\" : \"Standard Generalized Markup Language\",\n         \"Acronym\" : \"SGML\",\n         \"Abbrev\" : \"ISO 8879:1986\",\n         \"GlossDef\" : {\n           \"para\" : \"A meta-markup language, used to create markup languages such as DocBook.\",\n           \"SeeAlso\" : [ \"GML\", \"XML\" ]\n         },\n         \"GlossSee\" : \"markup\"\n       }\n     }\n   }\n }\n}\n"
}, 
{
  "input": "*class(\n *id=desc\n *name=description\n *superclass=str\n)\n\n*class(\n *id=val\n *name=value\n *superclass=str\n)\n\n*class(\n *id=media1\n *name=media1\n *superclass=map\n *assign=[\n   [desc;val]\n ]\n)\n\n*class(\n *id=media2\n *name=media2\n *superclass=map\n *assign=[\n   [desc;val]\n ]\n)\n*class(\n *id=list\n *name=list\n *superclass=map\n *assign[\n   [media1;media2]\n ]\n)\n\n\nlist=[tel;fb]:[yt;tw]",
  "minimised_modl": "*c(*i=desc;*n=description;*s=str);*c(*i=val;*n=value;*s=str);*c(*i=media1;*n=media1;*s=map;*a[[desc;val]]);*c(*i=media2;*n=media2;*s=map;*a[[desc;val]]);*c(*i=list;*n=list;*s=map;*a[[media1;media2]]);list=[tel;fb]:[yt;tw]",
  "expected_output": "{\n \"list\" : {\n   \"media1\" : {\n     \"description\" : \"tel\",\n     \"value\" : \"fb\"\n   },\n   \"media2\" : {\n     \"description\" : \"yt\",\n     \"value\" : \"tw\"\n   }\n }\n}\n"
}, {
  "input": "*CLASS(\n *id=p\n *name=person\n *SUPERCLASS=map\n)\n\np(name=John Smith;dob=01/01/2000)",
  "minimised_modl": "*C(*i=p;*n=person;*S=map);p(name=John Smith;dob=01/01/2000)",
  "expected_output": "{\n \"person\" : {\n   \"name\" : \"John Smith\",\n   \"dob\" : \"01/01/2000\"\n }\n}\n"
}, {
  "input": "*c(\n *i=m\n *n=message\n *S=map\n *a=[\n   [direction;date_time;message]\n ]\n method=sms\n)\nm=in:2018-03-22:hi",
  "minimised_modl": "*c(*i=m;*n=message;*S=map;*a[[direction;date_time;message]];method=sms);m=in:2018-03-22:hi",
  "expected_output": "{\n \"message\" : {\n   \"direction\" : \"in\",\n   \"date_time\" : \"2018-03-22\",\n   \"message\" : \"hi\",\n   \"method\" : \"sms\"\n }\n}\n"
}, {
  "input": "*class(\n *id=car\n *name=car\n *superclass=map\n)\n\ncar(\n make=Bentley\n)",
  "minimised_modl": "*c(*i=car;*n=car;*s=map);car(make=Bentley)",
  "expected_output": "{\n \"car\" : {\n   \"make\" : \"Bentley\"\n }\n}\n"
},
]